{"ast":null,"code":"var _jsxFileName = \"C:\\\\2nd year\\\\mood-song-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport MoodQuiz from './components/MoodQuiz';\nimport Journal from './components/Journal';\nimport { getMoodRecommendation, saveJournal } from './services/apiService';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [showSignup, setShowSignup] = useState(false);\n  const [moodResult, setMoodResult] = useState(null);\n  const [song, setSong] = useState('');\n  const [journalEntries, setJournalEntries] = useState([]);\n\n  // Handles the mood quiz submit for recommendation\n  async function handleMoodSubmit(moodData) {\n    // moodData contains: { detectedMood, answers, scores }\n    setMoodResult(moodData.detectedMood);\n    const recommendedSong = await getRecommendedSong(moodData.detectedMood);\n    setSong(recommendedSong);\n  }\n\n  // Handles saving the journal entry\n  function handleJournalSave(entry) {\n    saveJournal(entry);\n    setJournalEntries([...journalEntries, entry]);\n  }\n\n  // Handle Login\n  function handleLogin(userData) {\n    setUser(userData);\n  }\n\n  // Handle Signup\n  function handleSignup(userData) {\n    setUser(userData);\n    setShowSignup(false);\n  }\n\n  // Show Signup page if user clicks signup\n  if (!user && showSignup) {\n    return /*#__PURE__*/_jsxDEV(Signup, {\n      onSignup: handleSignup,\n      goToLogin: () => setShowSignup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show Login page if NOT logged in\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      goToSignup: () => setShowSignup(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Main app after login\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mood-Based Song Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user.email, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), !song && /*#__PURE__*/_jsxDEV(MoodQuiz, {\n      submitMood: handleMoodSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Recommended Song: \", song]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Journal, {\n        mood: moodResult,\n        song: song,\n        onSave: handleJournalSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Journal Entries:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: journalEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [entry.date, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), entry.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZYr/iEQSJMY6eKmgn5jhU6XUyyc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoodQuiz","Journal","getMoodRecommendation","saveJournal","Login","Signup","jsxDEV","_jsxDEV","App","_s","user","setUser","showSignup","setShowSignup","moodResult","setMoodResult","song","setSong","journalEntries","setJournalEntries","handleMoodSubmit","moodData","detectedMood","recommendedSong","getRecommendedSong","handleJournalSave","entry","handleLogin","userData","handleSignup","onSignup","goToLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","goToSignup","className","children","email","submitMood","mood","onSave","map","index","date","text","_c","$RefreshReg$"],"sources":["C:/2nd year/mood-song-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/App.css';\r\nimport MoodQuiz from './components/MoodQuiz';\r\nimport Journal from './components/Journal';\r\nimport { getMoodRecommendation, saveJournal } from './services/apiService';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [moodResult, setMoodResult] = useState(null);\r\n  const [song, setSong] = useState('');\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  // Handles the mood quiz submit for recommendation\r\n  async function handleMoodSubmit(moodData) {\r\n    // moodData contains: { detectedMood, answers, scores }\r\n    setMoodResult(moodData.detectedMood);\r\n    const recommendedSong = await getRecommendedSong(moodData.detectedMood);\r\n    setSong(recommendedSong);\r\n  }\r\n\r\n  // Handles saving the journal entry\r\n  function handleJournalSave(entry) {\r\n    saveJournal(entry);\r\n    setJournalEntries([...journalEntries, entry]);\r\n  }\r\n\r\n  // Handle Login\r\n  function handleLogin(userData) {\r\n    setUser(userData);\r\n  }\r\n\r\n  // Handle Signup\r\n  function handleSignup(userData) {\r\n    setUser(userData);\r\n    setShowSignup(false);\r\n  }\r\n\r\n  // Show Signup page if user clicks signup\r\n  if (!user && showSignup) {\r\n    return <Signup onSignup={handleSignup} goToLogin={() => setShowSignup(false)} />;\r\n  }\r\n\r\n  // Show Login page if NOT logged in\r\n  if (!user) {\r\n    return <Login onLogin={handleLogin} goToSignup={() => setShowSignup(true)} />;\r\n  }\r\n\r\n  // Main app after login\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Mood-Based Song Recommender</h1>\r\n      <p>Welcome, {user.email}!</p>\r\n      \r\n      {!song && <MoodQuiz submitMood={handleMoodSubmit} />}\r\n      \r\n      {song && (\r\n        <div>\r\n          <h3>Recommended Song: {song}</h3>\r\n          <Journal mood={moodResult} song={song} onSave={handleJournalSave} />\r\n        </div>\r\n      )}\r\n      \r\n      <div>\r\n        <h3>Your Journal Entries:</h3>\r\n        <ul>\r\n          {journalEntries.map((entry, index) => (\r\n            <li key={index}>\r\n              <strong>{entry.date}: </strong>{entry.text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}