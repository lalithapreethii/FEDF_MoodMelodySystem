{"ast":null,"code":"var _jsxFileName = \"C:\\\\2nd year\\\\mood-song-app\\\\frontend\\\\src\\\\components\\\\MoodQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  q: \"How are you feeling?\",\n  options: [\"Happy\", \"Sad\", \"Relaxed\", \"Energetic\"]\n}\n// Continue with more questions as needed\n];\nconst MoodQuiz = ({\n  onQuizComplete\n}) => {\n  _s();\n  const [answers, setAnswers] = useState([]);\n  const [step, setStep] = useState(0);\n  function selectAnswer(option) {\n    const newAnswers = [...answers, option];\n    setAnswers(newAnswers);\n    if (step === questions.length - 1) {\n      onQuizComplete(newAnswers);\n    } else {\n      setStep(step + 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: questions[step].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions[step].options.map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectAnswer(opt),\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodQuiz, \"Ac46Ll++DNWnlV3t8ChKTZ6i2Jg=\");\n_c = MoodQuiz;\nexport default MoodQuiz;\nvar _c;\n$RefreshReg$(_c, \"MoodQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","q","options","MoodQuiz","onQuizComplete","_s","answers","setAnswers","step","setStep","selectAnswer","option","newAnswers","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","onClick","_c","$RefreshReg$"],"sources":["C:/2nd year/mood-song-app/frontend/src/components/MoodQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst questions = [\r\n  { q: \"How are you feeling?\", options: [\"Happy\", \"Sad\", \"Relaxed\", \"Energetic\"] },\r\n  // Continue with more questions as needed\r\n];\r\n\r\nconst MoodQuiz = ({ onQuizComplete }) => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [step, setStep] = useState(0);\r\n\r\n  function selectAnswer(option) {\r\n    const newAnswers = [...answers, option];\r\n    setAnswers(newAnswers);\r\n    if (step === questions.length - 1) {\r\n      onQuizComplete(newAnswers);\r\n    } else {\r\n      setStep(step + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{questions[step].q}</h3>\r\n      <div>\r\n        {questions[step].options.map(opt => (\r\n          <button key={opt} onClick={() => selectAnswer(opt)}>{opt}</button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoodQuiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAChB;EAAEC,CAAC,EAAE,sBAAsB;EAAEC,OAAO,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW;AAAE;AAC/E;AAAA,CACD;AAED,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnC,SAASa,YAAYA,CAACC,MAAM,EAAE;IAC5B,MAAMC,UAAU,GAAG,CAAC,GAAGN,OAAO,EAAEK,MAAM,CAAC;IACvCJ,UAAU,CAACK,UAAU,CAAC;IACtB,IAAIJ,IAAI,KAAKR,SAAS,CAACa,MAAM,GAAG,CAAC,EAAE;MACjCT,cAAc,CAACQ,UAAU,CAAC;IAC5B,CAAC,MAAM;MACLH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACnB;EACF;EAEA,oBACET,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBhB,OAAA;MAAAgB,QAAA,EAAKf,SAAS,CAACQ,IAAI,CAAC,CAACP;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BpB,OAAA;MAAAgB,QAAA,EACGf,SAAS,CAACQ,IAAI,CAAC,CAACN,OAAO,CAACkB,GAAG,CAACC,GAAG,iBAC9BtB,OAAA;QAAkBuB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACW,GAAG,CAAE;QAAAN,QAAA,EAAEM;MAAG,GAA3CA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiD,CAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBIF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}