{"ast":null,"code":"var _jsxFileName = \"C:\\\\2nd year\\\\mood-song-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport MoodQuiz from './components/MoodQuiz';\nimport Journal from './components/Journal';\nimport { getRecommendedSong, saveJournal } from './services/apiService';\nimport Login from './components/Login';\nimport Signup from './components/Signup'; // Uncomment if you have a signup flow\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [moodResult, setMoodResult] = useState(null);\n  const [song, setSong] = useState('');\n  const [journalEntries, setJournalEntries] = useState([]);\n\n  // Handles the mood quiz submit for recommendation\n  async function handleMoodSubmit(answers) {\n    setMoodResult(answers[0]);\n    const recommendedSong = await getRecommendedSong(answers);\n    setSong(recommendedSong);\n  }\n\n  // Handles saving the journal entry\n  function handleJournalSave(entry) {\n    saveJournal(entry);\n    setJournalEntries([...journalEntries, entry]);\n  }\n\n  // Show Login page if NOT logged in\n  if (!user) {\n    return (\n      /*#__PURE__*/\n      // Use the background and card structure for full effect!\n      _jsxDEV(\"div\", {\n        className: \"auth-background\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  // Main app after login\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mood-Based Song Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !song && /*#__PURE__*/_jsxDEV(MoodQuiz, {\n      submitMood: handleMoodSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Recommended Song: \", song]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Journal, {\n        mood: moodResult,\n        song: song,\n        saveJournal: handleJournalSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Journal Entries:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: journalEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [entry.date, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), entry.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SNPGKMrWjFtb9RPKXImTk2i8O5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoodQuiz","Journal","getRecommendedSong","saveJournal","Login","Signup","jsxDEV","_jsxDEV","App","_s","user","setUser","moodResult","setMoodResult","song","setSong","journalEntries","setJournalEntries","handleMoodSubmit","answers","recommendedSong","handleJournalSave","entry","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","submitMood","mood","map","index","date","text","_c","$RefreshReg$"],"sources":["C:/2nd year/mood-song-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/App.css';\r\nimport MoodQuiz from './components/MoodQuiz';\r\nimport Journal from './components/Journal';\r\nimport { getRecommendedSong, saveJournal } from './services/apiService';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup'; // Uncomment if you have a signup flow\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [moodResult, setMoodResult] = useState(null);\r\n  const [song, setSong] = useState('');\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  // Handles the mood quiz submit for recommendation\r\n  async function handleMoodSubmit(answers) {\r\n    setMoodResult(answers[0]);\r\n    const recommendedSong = await getRecommendedSong(answers);\r\n    setSong(recommendedSong);\r\n  }\r\n\r\n  // Handles saving the journal entry\r\n  function handleJournalSave(entry) {\r\n    saveJournal(entry);\r\n    setJournalEntries([...journalEntries, entry]);\r\n  }\r\n\r\n  // Show Login page if NOT logged in\r\n  if (!user) {\r\n    return (\r\n      // Use the background and card structure for full effect!\r\n      <div className=\"auth-background\">\r\n        <Login onLogin={setUser} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main app after login\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Mood-Based Song Recommender</h1>\r\n      {!song && <MoodQuiz submitMood={handleMoodSubmit} />}\r\n      {song && (\r\n        <div>\r\n          <h3>Recommended Song: {song}</h3>\r\n          <Journal mood={moodResult} song={song} saveJournal={handleJournalSave} />\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h3>Your Journal Entries:</h3>\r\n        <ul>\r\n          {journalEntries.map((entry, index) => (\r\n            <li key={index}>\r\n              <strong>{entry.date}: </strong>{entry.text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}