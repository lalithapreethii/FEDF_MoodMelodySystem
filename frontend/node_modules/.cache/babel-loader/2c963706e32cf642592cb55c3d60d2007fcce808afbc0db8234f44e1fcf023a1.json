{"ast":null,"code":"import React,{useState}from'react';import'./styles/App.css';import MoodQuiz from'./components/MoodQuiz';import Journal from'./components/Journal';import{getMoodRecommendation,saveJournal}from'./services/apiService';import Login from'./components/Login';import Signup from'./components/Signup';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[showSignup,setShowSignup]=useState(false);const[moodResult,setMoodResult]=useState(null);const[song,setSong]=useState('');const[journalEntries,setJournalEntries]=useState([]);// Handles the mood quiz submit for recommendation\nasync function handleMoodSubmit(moodData){// moodData contains: { detectedMood, answers, scores }\nsetMoodResult(moodData.detectedMood);const recommendedSong=await getRecommendedSong(moodData.detectedMood);setSong(recommendedSong);}// Handles saving the journal entry\nfunction handleJournalSave(entry){saveJournal(entry);setJournalEntries([...journalEntries,entry]);}// Handle Login\nfunction handleLogin(userData){setUser(userData);}// Handle Signup\nfunction handleSignup(userData){setUser(userData);setShowSignup(false);}// Show Signup page if user clicks signup\nif(!user&&showSignup){return/*#__PURE__*/_jsx(Signup,{onSignup:handleSignup,goToLogin:()=>setShowSignup(false)});}// Show Login page if NOT logged in\nif(!user){return/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,goToSignup:()=>setShowSignup(true)});}// Main app after login\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mood-Based Song Recommender\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome, \",user.email,\"!\"]}),!song&&/*#__PURE__*/_jsx(MoodQuiz,{submitMood:handleMoodSubmit}),song&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Recommended Song: \",song]}),/*#__PURE__*/_jsx(Journal,{mood:moodResult,song:song,onSave:handleJournalSave})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Journal Entries:\"}),/*#__PURE__*/_jsx(\"ul\",{children:journalEntries.map((entry,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[entry.date,\": \"]}),entry.text]},index))})]})]});}export default App;","map":{"version":3,"names":["React","useState","MoodQuiz","Journal","getMoodRecommendation","saveJournal","Login","Signup","jsx","_jsx","jsxs","_jsxs","App","user","setUser","showSignup","setShowSignup","moodResult","setMoodResult","song","setSong","journalEntries","setJournalEntries","handleMoodSubmit","moodData","detectedMood","recommendedSong","getRecommendedSong","handleJournalSave","entry","handleLogin","userData","handleSignup","onSignup","goToLogin","onLogin","goToSignup","className","children","email","submitMood","mood","onSave","map","index","date","text"],"sources":["C:/2nd year/mood-song-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/App.css';\r\nimport MoodQuiz from './components/MoodQuiz';\r\nimport Journal from './components/Journal';\r\nimport { getMoodRecommendation, saveJournal } from './services/apiService';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [moodResult, setMoodResult] = useState(null);\r\n  const [song, setSong] = useState('');\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  // Handles the mood quiz submit for recommendation\r\n  async function handleMoodSubmit(moodData) {\r\n    // moodData contains: { detectedMood, answers, scores }\r\n    setMoodResult(moodData.detectedMood);\r\n    const recommendedSong = await getRecommendedSong(moodData.detectedMood);\r\n    setSong(recommendedSong);\r\n  }\r\n\r\n  // Handles saving the journal entry\r\n  function handleJournalSave(entry) {\r\n    saveJournal(entry);\r\n    setJournalEntries([...journalEntries, entry]);\r\n  }\r\n\r\n  // Handle Login\r\n  function handleLogin(userData) {\r\n    setUser(userData);\r\n  }\r\n\r\n  // Handle Signup\r\n  function handleSignup(userData) {\r\n    setUser(userData);\r\n    setShowSignup(false);\r\n  }\r\n\r\n  // Show Signup page if user clicks signup\r\n  if (!user && showSignup) {\r\n    return <Signup onSignup={handleSignup} goToLogin={() => setShowSignup(false)} />;\r\n  }\r\n\r\n  // Show Login page if NOT logged in\r\n  if (!user) {\r\n    return <Login onLogin={handleLogin} goToSignup={() => setShowSignup(true)} />;\r\n  }\r\n\r\n  // Main app after login\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Mood-Based Song Recommender</h1>\r\n      <p>Welcome, {user.email}!</p>\r\n      \r\n      {!song && <MoodQuiz submitMood={handleMoodSubmit} />}\r\n      \r\n      {song && (\r\n        <div>\r\n          <h3>Recommended Song: {song}</h3>\r\n          <Journal mood={moodResult} song={song} onSave={handleJournalSave} />\r\n        </div>\r\n      )}\r\n      \r\n      <div>\r\n        <h3>Your Journal Entries:</h3>\r\n        <ul>\r\n          {journalEntries.map((entry, index) => (\r\n            <li key={index}>\r\n              <strong>{entry.date}: </strong>{entry.text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}